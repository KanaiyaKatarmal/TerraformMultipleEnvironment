name: 'terraform-Azure'

on:
  push:
    branches: [dev, stage]
  pull_request:
    branches:
      - main
      
  workflow_dispatch: 
    inputs:
      name:
        description: 'Person to greet' 
  

#Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
defaults:
  run:
    shell: bash
env: 
  ROOT_PATH: '${{github.workspace}}'
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
#  ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
#  ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
#  ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
#  ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
#  STAGE_NAME: 'dev'
  
permissions:
  contents: read

jobs:
  terraform_plan:
    name: 'terraform plan'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
        
    steps:
    
    - name: Setup Environment
      run: |
        echo "MY_BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV


    - name: Set Credentials as env vars
      run: |
        echo "Branch ${MY_BRANCH}"
        echo "ARM_CLIENT_ID_NAME=AZURE_CLIENT_ID_${MY_BRANCH}" >> $GITHUB_ENV
        echo "ARM_CLIENT_SECRET_NAME=AZURE_CLIENT_SECRET_${MY_BRANCH}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID_NAME=AZURE_SUBSCRIPTION_ID_${MY_BRANCH}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID_NAME=AZURE_TENANT_ID_${MY_BRANCH}" >> $GITHUB_ENV

      
    - name: terraform-apply
      run: |
        echo ARM_CLIENT_ID=${{ secrets[env.ARM_CLIENT_ID_NAME] }} >> $GITHUB_ENV
        echo ARM_CLIENT_SECRET=${{ secrets[env.ARM_CLIENT_SECRET_NAME] }} >> $GITHUB_ENV
        echo ARM_SUBSCRIPTION_ID=${{ secrets[env.ARM_SUBSCRIPTION_ID_NAME] }} >> $GITHUB_ENV
        echo ARM_TENANT_ID=${{ secrets[env.ARM_TENANT_ID_NAME] }} >> $GITHUB_ENV

        
      
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1

  
    - name: terraform init
      run: terraform init -backend-config="${GITHUB_REF_NAME}-backend.conf"
      working-directory: ${{ env.ROOT_PATH }}

    - name: terraform Plan
      run: terraform plan -var-file="${GITHUB_REF_NAME}-app.tfvar"
      working-directory: ${{ env.ROOT_PATH }}

     
  terraform_apply:
    name: 'terraform apply'
    needs: [terraform_plan]
    runs-on: ubuntu-latest
    environment: production
    
    defaults:
      run:
        shell: bash

    steps:
    
    - name: terraform Init
      run: |
        echo "GIT_BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
        echo "GIT_BRANCH=${GIT_BRANCH}"
        
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
 
    - name: terraform Init
      run: terraform init -backend-config="${MY_BRANCH}-backend.conf"
      working-directory: ${{ env.ROOT_PATH }}

    - name: terraform Apply
      run: terraform apply -auto-approve -var-file="${MY_BRANCH}-app.tfvar"
      working-directory: ${{ env.ROOT_PATH }}

    # - name: terraform destroy
    #   run: terraform destroy -auto-approve -var-file="${MY_BRANCH}-app.tfvar"
    #   if: ${{inputs.tf_destroy}} == true
    #   working-directory: ${{ env.ROOT_PATH }}
