name: 'terraform-Azure'

on:
  push:
    branches: [dev, stage]
  pull_request:
    branches:
      - main
      
  workflow_dispatch: 
    inputs:
      name:
        description: 'Person to greet' 
  

#Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
defaults:
  run:
    shell: bash
env: 
  ROOT_PATH: '${{github.workspace}}'
#  ARM_CLIENT_ID: ${{secrets.AZURE_CLIENT_ID}}
#  ARM_CLIENT_SECRET: ${{secrets.AZURE_CLIENT_SECRET}}
#  ARM_SUBSCRIPTION_ID: ${{secrets.AZURE_SUBSCRIPTION_ID}}
#  ARM_TENANT_ID: ${{secrets.AZURE_TENANT_ID}}
  STAGE_NAME: '${{github.workspace}}-${{GITHUB_REF_NAME}}'
  
permissions:
  contents: read

jobs:
  terraform_plan:
    name: 'terraform plan'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        shell: bash
        
    steps:
    
    - name: Setup Environment
      run: |
        echo "MY_BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
        echo $MY_BRANCH
        echo ${{ env.STAGE_NAME }}
        
    - name: prepare-backend
      run: |
        export ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}
        export ARM_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }} 
        export ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}
        export ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }} 

        
      
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1

  
    - name: terraform init
      run: terraform init -backend-config="${MY_BRANCH}-backend.conf"
      working-directory: ${{ env.ROOT_PATH }}

    - name: terraform Plan
      run: terraform plan -var-file="${MY_BRANCH}-app.tfvar"
      working-directory: ${{ env.ROOT_PATH }}

     
  terraform_apply:
    name: 'terraform apply'
    needs: [terraform_plan]
    runs-on: ubuntu-latest
    environment: production
    
    defaults:
      run:
        shell: bash

    steps:
    
    - name: terraform Init
      run: |
        echo "GIT_BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
        echo "GIT_BRANCH=${GIT_BRANCH}"
        
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
 
    - name: terraform Init
      run: terraform init -backend-config="${MY_BRANCH}-backend.conf"
      working-directory: ${{ env.ROOT_PATH }}

    - name: terraform Apply
      run: terraform apply -auto-approve -var-file="${MY_BRANCH}-app.tfvar"
      working-directory: ${{ env.ROOT_PATH }}

    # - name: terraform destroy
    #   run: terraform destroy -auto-approve -var-file="${MY_BRANCH}-app.tfvar"
    #   if: ${{inputs.tf_destroy}} == true
    #   working-directory: ${{ env.ROOT_PATH }}
